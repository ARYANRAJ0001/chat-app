name: Deploy Fullstack App on EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # ------------------------------
      # Step 1: Checkout repository
      # ------------------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ------------------------------
      # Step 2: Setup Node.js
      # ------------------------------
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            server/package-lock.json
            client/package-lock.json

      # ------------------------------
      # Step 3: Backend Setup
      # ------------------------------
      - name: Install backend dependencies
        working-directory: ./server
        run: npm install

      - name: Create backend .env file
        working-directory: ./server
        run: |
          touch .env
          echo "${{ secrets.PROD_BACKEND_ENV }}" > .env

      - name: Start backend with PM2
        working-directory: ./server
        run: |
          /home/ubuntu/.nvm/versions/node/v22.16.0/bin/pm2 restart backend || /home/ubuntu/.nvm/versions/node/v22.16.0/bin/pm2 start index.js --name backend

      # ------------------------------
      # Step 4: Frontend Setup
      # ------------------------------
      - name: Clean npm cache & remove old dependencies
        working-directory: ./client
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Create frontend .env file
        working-directory: ./client
        run: |
          touch .env
          echo "${{ secrets.PROD_FRONTEND_ENV }}" > .env

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # ------------------------------
      # Step 5: Deploy frontend to Nginx
      # ------------------------------
      - name: Deploy frontend
        run: |
          sudo rm -rf /var/www/html/*
          sudo cp -r ./client/dist/* /var/www/html/
